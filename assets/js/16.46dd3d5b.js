(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{364:function(s,n,a){"use strict";a.r(n);var t=a(0),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[s._v("使用 go 开发的程序做的一次内存泄漏分析报告")])]),s._v(" "),a("h2",{attrs:{id:"准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[s._v("#")]),s._v(" 准备")]),s._v(" "),a("h3",{attrs:{id:"go-内存属性解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-内存属性解释"}},[s._v("#")]),s._v(" go 内存属性解释")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1、Alloc uint64 //golang语言框架堆空间分配的字节数\n2、TotalAlloc uint64 //从服务开始运行至今分配器为分配的堆空间总 和，只有增加，释放的时候不减少\n3、Sys uint64 //服务现在系统使用的内存\n4、Lookups uint64 //被runtime监视的指针数\n5、Mallocs uint64 //服务malloc的次数\n6、Frees uint64 //服务回收的heap objects的字节数\n7、HeapAlloc uint64 //服务分配的堆内存字节数\n8、HeapSys uint64 //系统分配的作为运行栈的内存\n9、HeapIdle uint64 //申请但是未分配的堆内存或者回收了的堆内存（空闲）字节数\n10、HeapInuse uint64 //正在使用的堆内存字节数\n10、HeapReleased uint64 //返回给OS的堆内存，类似C/C++中的free。\n11、HeapObjects uint64 //堆内存块申请的量\n12、StackInuse uint64 //正在使用的栈字节数\n13、StackSys uint64 //系统分配的作为运行栈的内存\n14、MSpanInuse uint64 //用于测试用的结构体使用的字节数\n15、MSpanSys uint64 //系统为测试用的结构体分配的字节数\n16、MCacheInuse uint64 //mcache结构体申请的字节数(不会被视为垃圾回收)\n17、MCacheSys uint64 //操作系统申请的堆空间用于mcache的字节数\n18、BuckHashSys uint64 //用于剖析桶散列表的堆空间\n19、GCSys uint64 //垃圾回收标记元信息使用的内存\n20、OtherSys uint64 //golang系统架构占用的额外空间\n21、NextGC uint64 //垃圾回收器检视的内存大小\n22、LastGC uint64 // 垃圾回收器最后一次执行时间。\n23、PauseTotalNs uint64 // 垃圾回收或者其他信息收集导致服务暂停的次数。\n24、PauseNs [256]uint64 //一个循环队列，记录最近垃圾回收系统中断的时间\n25、PauseEnd [256]uint64 //一个循环队列，记录最近垃圾回收系统中断的时间开始点。\n26、NumForcedGC uint32 //服务调用runtime.GC()强制使用垃圾回收的次数。\n27、GCCPUFraction float64 //垃圾回收占用服务CPU工作的时间总和。如果有100个goroutine，垃圾回收的时间为1S,那么久占用了100S。\n28、BySize //内存分配器使用情况\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h3",{attrs:{id:"测试脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试脚本"}},[s._v("#")]),s._v(" 测试脚本")])])}),[],!1,null,null,null);n.default=e.exports}}]);