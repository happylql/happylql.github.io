(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{342:function(t,s,a){t.exports=a.p+"assets/img/js_type_conversion_rule.5474c38e.png"},369:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",[t._v("回答"),n("a",{attrs:{href:"https://juejin.im/post/5cc1da82f265da036023b628",target:"_blank",rel:"noopener noreferrer"}},[t._v("一名【合格】前端工程师的自检清单"),n("OutboundLink")],1),t._v("中关于 js 提问")])]),t._v(" "),n("h2",{attrs:{id:"一、变量和类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、变量和类型"}},[t._v("#")]),t._v(" 一、变量和类型")]),t._v(" "),n("h3",{attrs:{id:"_1-javascript-规定了几种语言类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-javascript-规定了几种语言类型"}},[t._v("#")]),t._v(" 1."),n("code",[t._v("JavaScript")]),t._v(" 规定了几种语言类型")]),t._v(" "),n("ul",[n("li",[t._v("按照最新的 ECMAScript 标准，在 JavaScript 中有七种语言类型，分别六种原始类型（按值访问）Null、Undefined、Boolean、Number(基于 IEEE 754 标准的双精度 64 位二进制格式的值，即整数或浮点数、±Infinity、NaN）、String(ECMAScript 6 新定义，实例是唯一且不可改变的)、和一种引用类型 Object(包括 Object/Array/RegExp/Date)。")])]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://www.cnblogs.com/onepixel/p/5140944.html",title:"细说 JavaScript 七种数据类型",target:"_blank",rel:"noopener noreferrer"}},[t._v("细说 JavaScript 七种数据类型"),n("OutboundLink")],1)])]),t._v(" "),n("ul",[n("li",[t._v("有几点值得一提：")])]),t._v(" "),n("ol",[n("li",[t._v("由于数据在底层是以二进制存储的，JavaScript 判定前三位为 0 是 Object，而 null 的所有位均为 0。故而使用 typedof 判断 null 是不准的；")]),t._v(" "),n("li",[t._v("String、Number、Boolean 是自动创建的基本包装类型的对象，非 Boolean,Number, String 内置函数 new 出来的，对象只存代码的执行瞬间；")]),t._v(" "),n("li",[t._v("对象的某个属性值为 null 是正常的，null 转换为数值时值为 0，而 undefined 转为数值时为 NaN(非数字值的特殊值)。正因为 JavaScript 变量的值存不存在只在运行期才知道，所有 undefined 才有意义。")])]),t._v(" "),n("blockquote",[n("p",[t._v("注意：在 es10 中加入了第七种原始类型 BigInt")])]),t._v(" "),n("h3",{attrs:{id:"_2-javascript-对象的底层数据结构是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-javascript-对象的底层数据结构是什么"}},[t._v("#")]),t._v(" 2."),n("code",[t._v("JavaScript")]),t._v(" 对象的底层数据结构是什么")]),t._v(" "),n("ul",[n("li",[t._v("在 JavaScript 中，每一个变量在内存中都需要一个空间来存储。内存空间被分为两种，栈内存和堆内存。")]),t._v(" "),n("li",[t._v("JavaScript 中的原始类型的值被直接存储在栈中，在变量定义时，栈就为其分配好了内存空间。")]),t._v(" "),n("li",[t._v("而引用类型的值实际存储在堆内存中，它在栈中只存储了一个固定长度的地址，这个地址指向堆内存中的值。")])]),t._v(" "),n("h3",{attrs:{id:"_3-symbol-类型在实际开发中的应用、可手动实现一个简单的-symbol"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-symbol-类型在实际开发中的应用、可手动实现一个简单的-symbol"}},[t._v("#")]),t._v(" 3."),n("code",[t._v("Symbol")]),t._v(" 类型在实际开发中的应用、可手动实现一个简单的 "),n("code",[t._v("Symbol")])]),t._v(" "),n("ul",[n("li",[t._v("私有属性")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" realName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"happylql"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("realName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"happylql"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// []")]),t._v("\nObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// []")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <empty>")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("blockquote",[n("p",[t._v("但 Symbol 只能隐藏这些函数，并不能阻止未授权访问。 仍然可以通过 Object.getOwnPerpertySymbols()或 Reflect.ownKeys(p) 来枚举到 realName 属性。")])]),t._v(" "),n("ul",[n("li",[t._v("防止属性污染")])]),t._v(" "),n("blockquote",[n("p",[t._v("在某些情况下，我们可能要为对象添加一个属性，此时就有可能造成属性覆盖，用 Symbol 作为对象属性可以保证永远不会出现同名属性")])]),t._v(" "),n("h3",{attrs:{id:"_4-javascript-中的变量在内存中的具体存储形式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-javascript-中的变量在内存中的具体存储形式"}},[t._v("#")]),t._v(" 4."),n("code",[t._v("JavaScript")]),t._v(" 中的变量在内存中的具体存储形式")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("栈内存")]),t._v(" "),n("th",[t._v("堆内存")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("存储原始类型(基本类型)")]),t._v(" "),n("td",[t._v("存储引用类型")])]),t._v(" "),n("tr",[n("td",[t._v("按值访问")]),t._v(" "),n("td",[t._v("按引用访问")])]),t._v(" "),n("tr",[n("td",[t._v("存储的值大小固定")]),t._v(" "),n("td",[t._v("存储的值大小不定，可动态调整")])]),t._v(" "),n("tr",[n("td",[t._v("由系统自动分配内存空间")]),t._v(" "),n("td",[t._v("由代码进行指定分配")])]),t._v(" "),n("tr",[n("td",[t._v("空间小，运行效率高")]),t._v(" "),n("td",[t._v("空间大，运行效率相对较低")])]),t._v(" "),n("tr",[n("td",[t._v("先进后出，后进先出")]),t._v(" "),n("td",[t._v("无序存储，可根据引用直接获取")])])])]),t._v(" "),n("h3",{attrs:{id:"_5-基本类型对应的内置对象，以及他们之间的装箱拆箱操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-基本类型对应的内置对象，以及他们之间的装箱拆箱操作"}},[t._v("#")]),t._v(" 5.基本类型对应的内置对象，以及他们之间的装箱拆箱操作")]),t._v(" "),n("p",[t._v("把基本数据类型转换为对应的引用类型的操作称为装箱，把引用类型转换为对应的基本数据类型称为拆箱。")]),t._v(" "),n("ul",[n("li",[t._v("以 string 为例，装箱的实现机制是：")])]),t._v(" "),n("ol",[n("li",[t._v("创建 String 类型的一个实例;")]),t._v(" "),n("li",[t._v("在实例上调用指定的方法；")]),t._v(" "),n("li",[t._v("销毁这个实例；")])]),t._v(" "),n("ul",[n("li",[t._v("拆箱的实现机制是：通过引用类型的 valueOf()或者 toString()方法。如果是自定义对象，可以自定义它的 valueOf()/toString()实现拆箱。")])]),t._v(" "),n("h3",{attrs:{id:"_6-理解值类型和引用类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-理解值类型和引用类型"}},[t._v("#")]),t._v(" 6.理解值类型和引用类型")]),t._v(" "),n("ol",[n("li",[t._v("值类型的值是一经确定就不可变的；")]),t._v(" "),n("li",[t._v("值类型的比较是值的比较；")]),t._v(" "),n("li",[t._v("值类型的变量是存放在栈区的（栈区指内存里的栈内存）；")]),t._v(" "),n("li",[t._v("引用类型可以拥有属性和方法，并且是可以动态改变的；")]),t._v(" "),n("li",[t._v("引用类型的值是同时保存在栈内存和堆内存中的对象;")]),t._v(" "),n("li",[t._v("引用类型的比较是引用的比较(也就是栈中存的堆内存地址);")])]),t._v(" "),n("blockquote",[n("p",[t._v("注意：ECMAScript 中所有的函数的参数都是按值传递的。函数参数传递的并不是变量的引用，而是变量拷贝的副本，当变量是原始类型时，这个副本就是值本身，当变量是引用类型时，这个副本是指向堆内存的地址。例子如下：")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"happylql"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HAPPYLQL"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里是副本的堆内存地址改变了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// happylql")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("h3",{attrs:{id:"_7-null-和-undefined-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-null-和-undefined-的区别"}},[t._v("#")]),t._v(" 7."),n("code",[t._v("null")]),t._v(" 和 "),n("code",[t._v("undefined")]),t._v(" 的区别")]),t._v(" "),n("p",[t._v("从字面意思解读，null 意为空，可想而知，只有定义（申明）了的变量才能置空。undefined 意为未定义，因为 JavaScript 是一门动态类型的语言，所以变量的值存不存在只有在运行期才知道。这样，当表示一个变量不存在时，它就是 undefined。另外，null 转换为数值时值为 0，而 undefined 转为数值时为 NaN(非数字值的特殊值)。")]),t._v(" "),n("h3",{attrs:{id:"_8-至少可以说出三种判断-javascript-数据类型的方式，以及他们的优缺点，如何准确的判断数组类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-至少可以说出三种判断-javascript-数据类型的方式，以及他们的优缺点，如何准确的判断数组类型"}},[t._v("#")]),t._v(" 8.至少可以说出三种判断 "),n("code",[t._v("JavaScript")]),t._v(" 数据类型的方式，以及他们的优缺点，如何准确的判断数组类型")]),t._v(" "),n("p",[t._v("一般有四种方法：typeof、instanceof、constructor、toString")]),t._v(" "),n("ol",[n("li",[t._v("typeof")])]),t._v(" "),n("p",[t._v("返回一个表示数据类型的字符串，包括：number、boolean、string、symbol、undefined、function、object 这 7 种数据类型。只能对基本类型（除了 null）做出准确的判断。")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("instanceof")])]),t._v(" "),n("p",[t._v("判断对象和构造函数在原型链上是否有关系，如果有关系，返回真，否则返回假。正常情况下无法对基本数据类型做出类型判断，除非它们使用如下方式创建。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"happylql"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nname "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("constructor")])]),t._v(" "),n("p",[t._v("查看对象对应的构造函数。constructor 在其对应对象的原型下面，是自动生成的。当我们申明构造函数的时候，程序会自动添加：构造函数名.prototype.constructor = 构造函数名。但是，undefined 和 null 是不能够判断出类型的，并且会报错。因为 null 和 undefined 是无效的对象，因此是不会有 constructor 存在的。同时，constructor 属性是可以被修改的，会导致检测出的结果不正确，因此它的判断结果是不保险的。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 举个例子")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"happylql"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("ol",{attrs:{start:"4"}},[n("li",[t._v("toString")])]),t._v(" "),n("p",[t._v("toString 是 Object 原型对象上的一个方法，默认返回其调用者的具体类型，更准确的说，是 toString 运行时 this 指向的对象类型，返回的类型格式为[object xxx]，xxx 即是具体的数据类型。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些容易弄错的情况：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object HTMLDocument]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Window]")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[n("strong",[t._v("总结：")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("优缺点")]),t._v(" "),n("th",[t._v("typeof")]),t._v(" "),n("th",[t._v("instanceof")]),t._v(" "),n("th",[t._v("constructor")]),t._v(" "),n("th",[t._v("Object.prototype.toString.call")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("优点")]),t._v(" "),n("td",[t._v("使用简单")]),t._v(" "),n("td",[t._v("能检测出引用类型")]),t._v(" "),n("td",[t._v("基本能检测所有的类型（除了 null 和 undefined）")]),t._v(" "),n("td",[t._v("检测出所有的类型")])]),t._v(" "),n("tr",[n("td",[t._v("缺点")]),t._v(" "),n("td",[t._v("只能用来检测出原始类型（除了 null）和函数类型")]),t._v(" "),n("td",[t._v("不能检测出基本类型")]),t._v(" "),n("td",[t._v("constructor 易被修改")]),t._v(" "),n("td",[t._v("IE6 下，undefined 和 null 均为 Object")])])])]),t._v(" "),n("h3",{attrs:{id:"_9-可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用"}},[t._v("#")]),t._v(" 9.可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用")]),t._v(" "),n("ul",[n("li",[t._v("可能发生隐式类型转换的场景")])]),t._v(" "),n("ol",[n("li",[t._v("if 语句和逻辑语句；")]),t._v(" "),n("li",[t._v("各种运数学算符；")]),t._v(" "),n("li",[t._v("使用 == 时；")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些容易弄错的情况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Object]"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1,2,3"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虽然undefined、null和false都容易被当成假值，但是它们比较的结果是false，因为false首先被转换成0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// !的优先级高于==，![]首先会被转换为false，然后false转换成Number类型为0，左侧[]转换为0，两侧比较相等")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据数组的ToPrimitive规则，数组元素为null或undefined时，该元素被当做空字符串处理，所以[null]、[undefined]都会被转换为0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])]),n("ul",[n("li",[t._v("转换规则")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(342),alt:"类型转换规则"}})]),t._v(" "),n("ul",[n("li",[n("p",[t._v("如何避免")]),t._v(" "),n("p",[t._v("推荐使用===来判断两个值是否相等")])]),t._v(" "),n("li",[n("p",[t._v("巧妙应用")])])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Q： 如何使得 a == 1 && a==2 && a==3 为true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("h3",{attrs:{id:"_10-出现小数精度丢失的原因，javascript-可以存储的最大数字、最大安全数字，javascript-处理大数字的方法、避免精度丢失的方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-出现小数精度丢失的原因，javascript-可以存储的最大数字、最大安全数字，javascript-处理大数字的方法、避免精度丢失的方法"}},[t._v("#")]),t._v(" 10.出现小数精度丢失的原因，"),n("code",[t._v("JavaScript")]),t._v(" 可以存储的最大数字、最大安全数字，"),n("code",[t._v("JavaScript")]),t._v(" 处理大数字的方法、避免精度丢失的方法")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("小数精度丢失原因")]),t._v(" "),n("p",[t._v("我们都知道，计算机中所有的数据都是以二进制存储的，所以在计算时计算机要把数据先转换成二进制进行计算。然而，如果二进制计算时发生了精度丢失，最后得到的结果就会与预计的不符。在 ECMAScript 语言规范中可以看到，ECMAScript 中的 Number 类型遵循 IEEE 754 标准（64 位双精度），使用 64 位固定长度来表示，分三部分：符号位、指数位（11 位）、尾数位（52 位），其中尾数位就是我们把数值转换成二进制所看到的。由于尾数位只能存储 52 个数字的限制，有效数字第 53 位及以后的数字是不能存储的，它遵循“如果是 1 就向前一位进 1，如果是 0 就舍弃”的原则，所以在这里就有了精度的丢失。")])]),t._v(" "),n("li",[n("p",[t._v("可以存储的最大数字")]),t._v(" "),n("p",[t._v("指数位有 11 位，取值数范围[-1024,1023] （十进制）\n易知，最大数为 1.111...X 2^1023，转换成十进制为 1.7976931348623157e+308，也是 "),n("code",[t._v("Number.MAX_VALUE")])])]),t._v(" "),n("li",[n("p",[t._v("最大安全数字")]),t._v(" "),n("p",[t._v("首先，对于二进制来说，小数点前保留一位，规格化后始终是 1.***，节省了 1 bit，这个 1 并不需要保存。\n由于尾数位位数至多为 52，易知，最大安全数为 1.111...X 2^52，转换成十进制数为 9007199254740991，也是"),n("code",[t._v("Number.MAX_SAFE_INTEGER")])])])]),t._v(" "),n("h2",{attrs:{id:"二、原型和原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、原型和原型链"}},[t._v("#")]),t._v(" 二、原型和原型链")]),t._v(" "),n("h3",{attrs:{id:"_1-理解原型设计模式以及-javascript-中的原型规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解原型设计模式以及-javascript-中的原型规则"}},[t._v("#")]),t._v(" 1.理解原型设计模式以及 "),n("code",[t._v("JavaScript")]),t._v(" 中的原型规则")]),t._v(" "),n("ul",[n("li",[t._v("设计模式")])]),t._v(" "),n("ol",[n("li",[t._v("工厂模式：在函数内创建一个对象，给对象赋予属性及方法再将对象返回；")]),t._v(" "),n("li",[t._v("构造函数模式：无需在函数内创建对象，而是用 this 指代；")]),t._v(" "),n("li",[t._v("原型模式：函数中不对属性进行定义，利用 prototype 属性进行定义，可以让所有对象实例共享它所包含的属性及方法；")]),t._v(" "),n("li",[t._v("混合模式：构造函数模式用于定义实例属性，而原型模式用于定义方法和共享的属性；")]),t._v(" "),n("li",[t._v("动态原型模式：将所有的信息都封装在构造函数中(包括原型和实例属性)，通过在构造函数中实例化原型(仅在必要的情况下)实现封装。把共享的使用原型模式，不共享的使用构造函数；\n"),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5bdf1cf06fb9a049cd53a3a1",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 创建对象（五）——动态原型模式"),n("OutboundLink")],1)])])]),t._v(" "),n("li",[t._v("寄生构造函数模式")]),t._v(" "),n("li",[t._v("稳妥构造函数模式\n"),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1028488",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 之面向对象学习七(动态原型模式、寄生构造函数模式、稳妥构造函数模式创建自定义类型)"),n("OutboundLink")],1)])])])]),t._v(" "),n("ul",[n("li",[t._v("原型规则")])]),t._v(" "),n("ol",[n("li",[t._v("所有的引用类型（数组、对象、函数），都具有对象特征，即可自由扩展属性；")]),t._v(" "),n("li",[t._v("所有的引用类型，都有一个"),n("code",[t._v("__proto__")]),t._v(" 属性（隐式原型），属性值是一个普通对象；")]),t._v(" "),n("li",[t._v("所有函数，都具有一个 "),n("code",[t._v("prototype")]),t._v("（显示原型），属性值也是一个普通原型；")]),t._v(" "),n("li",[t._v("所有的引用类型（数组、对象、函数），其隐式原型指向其构造函数的显式原型；")]),t._v(" "),n("li",[t._v("当试图得到一个对象的某个属性时，如果这个对象本身没有这个属性，那么会去它的"),n("code",[t._v("__proto__")]),t._v("（即它的构造函数的 "),n("code",[t._v("prototype")]),t._v("）中去寻找；")])]),t._v(" "),n("h3",{attrs:{id:"_2-instanceof-的底层实现原理，手动实现一个-instanceof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-instanceof-的底层实现原理，手动实现一个-instanceof"}},[t._v("#")]),t._v(" 2."),n("code",[t._v("instanceof")]),t._v(" 的底层实现原理，手动实现一个 "),n("code",[t._v("instanceof")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("底层原理\n首先判断左边的变量的隐式原型"),n("code",[t._v("__proto__")]),t._v("是否全等于右边的显式原型"),n("code",[t._v("prototype")]),t._v("，如果相等返回 true，如果不等则沿着原型链依次向上进行判断，如果都不等则返回 false。")])]),t._v(" "),n("li",[n("p",[t._v("手动实现")])])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("myInstanceof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("R")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("h3",{attrs:{id:"_3-实现继承的几种方式以及他们的优缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现继承的几种方式以及他们的优缺点"}},[t._v("#")]),t._v(" 3.实现继承的几种方式以及他们的优缺点")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("继承实现方式")]),t._v(" "),n("th",[t._v("优点")]),t._v(" "),n("th",[t._v("缺点")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("原型链")]),t._v(" "),n("td",[t._v("父类的方法得到了复用")]),t._v(" "),n("td",[t._v("子类实例共享属性，造成实例间的属性会相互影响")])]),t._v(" "),n("tr",[n("td",[t._v("借用构造函数")]),t._v(" "),n("td",[t._v("子类的每个实例都有自己的属性，不会相互影响")]),t._v(" "),n("td",[t._v("不能继承父类原型，函数在构造函数中，每个子类实例不能共享函数，浪费内存")])]),t._v(" "),n("tr",[n("td",[t._v("组合")]),t._v(" "),n("td",[t._v("继承了上述两种方式的优点，摒弃了缺点，复用了方法，子类又有各自的属性")]),t._v(" "),n("td",[t._v("父类原型和子类原型是同一个对象，无法区分子类真正是由谁构造")])]),t._v(" "),n("tr",[n("td",[t._v("寄生组合式")]),t._v(" "),n("td",[t._v("解决了前三种方式的缺点")]),t._v(" "),n("td",[t._v("写法稍显复杂")])]),t._v(" "),n("tr",[n("td",[t._v("es6 中的 class")]),t._v(" "),n("td",[t._v("写法更加简洁")]),t._v(" "),n("td",[t._v("未知")])])])]),t._v(" "),n("h3",{attrs:{id:"_4-至少说出一种开源项目-如-node-中应用原型继承的案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-至少说出一种开源项目-如-node-中应用原型继承的案例"}},[t._v("#")]),t._v(" 4.至少说出一种开源项目(如 "),n("code",[t._v("Node")]),t._v(")中应用原型继承的案例")]),t._v(" "),n("p",[t._v("在 node 中可以使用 util 模块的 inherits 来实现继承，util.inherits()中有两个参数，第一个树子类构造函数，第二个使父类构造函数。")]),t._v(" "),n("p",[n("strong",[t._v("util.inherits 的实现")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inherits")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" superCtor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("super_ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" superCtor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// super_属性是子类继承父类时构造函数要写入的一个属性值。使用方式：Child.super_.call(this)")]),t._v("\n  ctor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("superCtor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    constructor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ctor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      enumerable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      writable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      configurable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("h3",{attrs:{id:"_5-可以描述-new-一个对象的详细过程，手动实现一个-new-操作符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-可以描述-new-一个对象的详细过程，手动实现一个-new-操作符"}},[t._v("#")]),t._v(" 5.可以描述 "),n("code",[t._v("new")]),t._v(" 一个对象的详细过程，手动实现一个 "),n("code",[t._v("new")]),t._v(" 操作符")]),t._v(" "),n("ul",[n("li",[t._v("详细过程")])]),t._v(" "),n("ol",[n("li",[t._v("创建空对象；")]),t._v(" "),n("li",[t._v("设置新对象的 "),n("code",[t._v("constructor")]),t._v(" 属性为构造函数的名称，设置新对象的"),n("code",[t._v("__proto__")]),t._v("属性指向构造函数的 "),n("code",[t._v("prototype")]),t._v(" 对象；")]),t._v(" "),n("li",[t._v("使用新对象调用函数，函数中的 "),n("code",[t._v("this")]),t._v(" 被指向新实例对象：")]),t._v(" "),n("li",[t._v("将初始化完毕的新对象的地址保存到等号左边的变量中。")])]),t._v(" "),n("ul",[n("li",[t._v("模拟实现 new")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("newObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新建一个对象实例")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Constructor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取构造函数")]),t._v("\n  obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将obj的原型指向构造函数，这样 obj 就可以访问到构造函数原型中的属性")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ret "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 改变构造函数中this的指向")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" ret "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" ret "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断返回的值是不是一个对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("h3",{attrs:{id:"_6-理解-es6-class-构造以及继承的底层实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-理解-es6-class-构造以及继承的底层实现原理"}},[t._v("#")]),t._v(" 6.理解 "),n("code",[t._v("es6")]),t._v(" "),n("code",[t._v("class")]),t._v(" 构造以及继承的底层实现原理")]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://segmentfault.com/a/1190000014798678",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 类以及继承的实现原理"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"三、作用域和闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、作用域和闭包"}},[t._v("#")]),t._v(" 三、作用域和闭包")]),t._v(" "),n("h3",{attrs:{id:"_1-理解词法作用域和动态作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解词法作用域和动态作用域"}},[t._v("#")]),t._v(" 1.理解词法作用域和动态作用域")]),t._v(" "),n("blockquote",[n("p",[t._v("作用域：程序源代码中定义变量的区域。")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("词法作用域（"),n("code",[t._v("lexical scoping")]),t._v("）\n也就是静态作用域，它的作用域是指在词法分析阶段就确定了，不会改变。JavaScript 的作用域就词法作用域（事实上大部分语言都是基于词法作用域）。")])]),t._v(" "),n("li",[n("p",[t._v("动态作用域\n在运行时根据程序的流程信息来动态确定的，而不是在写代码时进行静态确定的。动态作用域并不关心函数和作用域是如何声明以及在何处声明的，只关心它们从何处调用。比如，bash 就是采用动态作用域。")])])]),t._v(" "),n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/3",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 深入之词法作用域和动态作用域"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"_2-理解-javascript-的作用域和作用域链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-理解-javascript-的作用域和作用域链"}},[t._v("#")]),t._v(" 2.理解 "),n("code",[t._v("JavaScript")]),t._v(" 的作用域和作用域链")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("JavaScript")]),t._v(" 的作用域\n分为全局作用域、函数作用域以及块级作用域（ES6 新加）。\n在代码中任何地方都能访问到的对象拥有全局作用域：")]),t._v(" "),n("ol",[n("li",[t._v("最外层函数和在最外层函数外面定义的变量拥有全局作用域；")]),t._v(" "),n("li",[t._v("所有末定义直接赋值的变量自动声明为拥有全局作用域；")]),t._v(" "),n("li",[t._v("所有全局对象（如"),n("code",[t._v("window")]),t._v("）的属性拥有全局作用域；")])]),t._v(" "),n("p",[t._v("函数作用域是指声明在函数内部的变量，和全局作用域相反，局部作用域一般只在固定的代码片段内可访问到，最常见的例如函数内部。")]),t._v(" "),n("p",[t._v("块级作用域可通过新增命令 "),n("code",[t._v("let")]),t._v(" 和 "),n("code",[t._v("const")]),t._v(" 声明，所声明的变量在指定块的作用域外无法被访问。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("JavaScript")]),t._v(" 的作用域链\n在 "),n("code",[t._v("JavaScript")]),t._v(" 中，函数也是对象，实际上，"),n("code",[t._v("JavaScript")]),t._v(" 里一切都是对象。函数对象和其它对象一样，拥有可以通过代码访问的属性和一系列仅供 "),n("code",[t._v("JavaScript")]),t._v(" 引擎访问的内部属性。其中一个内部属性是 "),n("code",[t._v("[[Scope]]")]),t._v("，由 "),n("code",[t._v("ECMA-262")]),t._v(" 标准第三版定义，该内部属性包含了函数被创建的作用域中对象的集合，这个集合被称为函数的作用域链，它决定了哪些数据能被函数访问。")])])]),t._v(" "),n("h3",{attrs:{id:"_3-理解-javascript-的执行上下文和执行栈，可以应用堆栈信息快速定位问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-理解-javascript-的执行上下文和执行栈，可以应用堆栈信息快速定位问题"}},[t._v("#")]),t._v(" 3.理解 "),n("code",[t._v("JavaScript")]),t._v(" 的执行上下文和执行栈，可以应用堆栈信息快速定位问题")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("执行上下文\n当前 "),n("code",[t._v("JavaScript")]),t._v(" 代码被解析和执行时所在环境的抽象概念， "),n("code",[t._v("JavaScript")]),t._v(" 中运行任何的代码都是在执行上下文中运行。\n执行上下文分三种类型：")]),t._v(" "),n("ol",[n("li",[t._v("全局执行上下文： 这是默认的、最基础的执行上下文。不在任何函数中的代码都位于全局执行上下文中。它做了两件事：1. 创建一个全局对象，在浏览器中这个全局对象就是 "),n("code",[t._v("window")]),t._v(" 对象。2. 将 "),n("code",[t._v("this")]),t._v(" 指针指向这个全局对象。一个程序中只能存在一个全局执行上下文；")]),t._v(" "),n("li",[t._v("函数执行上下文：每次调用函数时，都会为该函数创建一个新的执行上下文。每个函数都拥有自己的执行上下文，但是只有在函数被调用的时候才会被创建。一个程序中可以存在任意数量的函数执行上下文。每当一个新的执行上下文被创建，它都会按照特定的顺序执行一系列步骤，具体过程将在本文后面讨论。")]),t._v(" "),n("li",[n("code",[t._v("Eval")]),t._v(" 函数执行上下文：运行在 eval 函数中的代码也获得了自己的执行上下文。")])])]),t._v(" "),n("li",[n("p",[t._v("执行栈\n可以把执行上下文栈认为是一个存储函数调用的栈结构，遵循先进后出的原则。记住以下关键点：")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("JavaScript")]),t._v(" 执行在单线程上，所有的代码都是排队执行。")]),t._v(" "),n("li",[t._v("一开始浏览器执行全局的代码时，首先创建全局的执行上下文，压入执行栈的顶部。")]),t._v(" "),n("li",[t._v("每当进入一个函数的执行就会创建函数的执行上下文，并且把它压入执行栈的顶部。当前函数执行完成后，当前函数的执行上下文出栈，并等待垃圾回收。")]),t._v(" "),n("li",[t._v("浏览器的"),n("code",[t._v("JavaScript")]),t._v("执行引擎总是访问栈顶的执行上下文。")]),t._v(" "),n("li",[t._v("全局上下文只有唯一的一个，它在浏览器关闭时出栈。")])])])]),t._v(" "),n("h3",{attrs:{id:"_4-this-的原理以及几种不同使用场景的取值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-this-的原理以及几种不同使用场景的取值"}},[t._v("#")]),t._v(" 4."),n("code",[t._v("this")]),t._v(" 的原理以及几种不同使用场景的取值")]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://github.com/logan70/Blog/issues/27",target:"_blank",rel:"noopener noreferrer"}},[t._v("this 的原理以及几种不同使用场景的取值"),n("OutboundLink")],1)])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"window"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("show1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("show2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("show3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("show4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person2"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person1 函数作为对象方法调用，this指向对象")]),t._v("\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person2 使用call间接调用函数，this指向传入的person2")]),t._v("\n\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window  箭头函数无this绑定，在全局环境找到this，指向window")]),t._v("\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window  间接调用改变this指向对箭头函数无效")]),t._v("\n\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window  person1.show3()返回普通函数，相当于普通函数调用，this指向window")]),t._v("\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person2 使用call间接调用函数，this指向传入的person2")]),t._v("\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window  person1.show3.call(person2)仍然返回普通函数")]),t._v("\n\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person1 person1.show4调用对象方法，this指向person1，返回箭头函数，this在person1.show4调用时的词法环境中找到，指向person1")]),t._v("\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person1  间接调用改变this指向对箭头函数无效")]),t._v("\nperson1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person2  改变了person1.show4调用时this的指向，所以返回的箭头函数的内this解析改变")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br")])]),n("h3",{attrs:{id:"_5-闭包的实现原理和作用，可以列举几个开发中闭包的实际应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-闭包的实现原理和作用，可以列举几个开发中闭包的实际应用"}},[t._v("#")]),t._v(" 5.闭包的实现原理和作用，可以列举几个开发中闭包的实际应用")]),t._v(" "),n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://www.dazhuanlan.com/2019/09/02/5d6c747288bcf/",target:"_blank",rel:"noopener noreferrer"}},[t._v("闭包的实现原理和作用"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"_6-理解堆栈溢出和内存泄漏的原理，如何防止"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-理解堆栈溢出和内存泄漏的原理，如何防止"}},[t._v("#")]),t._v(" 6.理解堆栈溢出和内存泄漏的原理，如何防止")]),t._v(" "),n("blockquote",[n("p",[t._v("内存从物理意义上是指由一系列晶体管构成的可以存储数据的回路，从逻辑的角度我们可以将内存看作是一个巨大的可读写的比特数组。")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("堆栈溢出（内存溢出 out of memory）\n程序向系统申请一定大小内存，而系统不能满足程序的要求就是内存的溢出，也叫内存越界。\n推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5d59fcb36fb9a06b2766cafa",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js 内存溢出时如何处理？"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[t._v("内存泄漏（memory leak）\n不再用到的内存，没有及时释放，就叫做内存泄漏。注意：内存泄漏真正的危害是它的堆积，这最终会消耗尽系统所有的内存。比如，使用完后及时清理的闭包就是一次性内存泄漏。\n推荐阅读"),n("a",{attrs:{href:"https://jinlong.github.io/2016/05/01/4-Types-of-Memory-Leaks-in-JavaScript-and-How-to-Get-Rid-Of-Them/",target:"_blank",rel:"noopener noreferrer"}},[t._v("4 类 JavaScript 内存泄漏及如何避免"),n("OutboundLink")],1)])])]),t._v(" "),n("h3",{attrs:{id:"_7-如何处理循环的异步操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何处理循环的异步操作"}},[t._v("#")]),t._v(" 7.如何处理循环的异步操作")]),t._v(" "),n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://juejin.im/entry/596f9190518825264153fd0f",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何优雅地写 js 异步循环"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"_8-理解模块化解决的实际问题，可列举几个模块化方案并理解其中原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-理解模块化解决的实际问题，可列举几个模块化方案并理解其中原理"}},[t._v("#")]),t._v(" 8.理解模块化解决的实际问题，可列举几个模块化方案并理解其中原理")]),t._v(" "),n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5c17ad756fb9a049ff4e0a62",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端模块化详解(完整版)"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"四、执行机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、执行机制"}},[t._v("#")]),t._v(" 四、执行机制")]),t._v(" "),n("h3",{attrs:{id:"_1-为何-try-里面放-return，finally-还会执行，理解其内部机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-为何-try-里面放-return，finally-还会执行，理解其内部机制"}},[t._v("#")]),t._v(" 1.为何 "),n("code",[t._v("try")]),t._v(" 里面放 "),n("code",[t._v("return，finally")]),t._v(" 还会执行，理解其内部机制")]),t._v(" "),n("blockquote",[n("p",[t._v("因为在 try-catch 的机制中，当 try 或者 catch 中有 return，都会先执行 finally 里的代码，并且 finally 中没有 return 才会去执行 try 或者 catch 中的 return。如果 finally 里有 return，则执行完 finally 里的 return 后不会再去执行 try 或者 catch 中的任何代码（就真的 return 了）。")])]),t._v(" "),n("h3",{attrs:{id:"_2-javascript-如何实现异步编程，可以详细描述-eventloop-机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-javascript-如何实现异步编程，可以详细描述-eventloop-机制"}},[t._v("#")]),t._v(" 2."),n("code",[t._v("JavaScript")]),t._v(" 如何实现异步编程，可以详细描述 "),n("code",[t._v("EventLoop")]),t._v(" 机制")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("JavaScript")]),t._v(" 如何实现异步编程")]),t._v(" "),n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5bcad206f265da0ac3734014",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 异步编程"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[n("code",[t._v("EventLoop")]),t._v(" 机制\n具体的操作步骤如下：")]),t._v(" "),n("ol",[n("li",[t._v("从宏任务的头部取出一个任务执行；")]),t._v(" "),n("li",[t._v("执行过程中若遇到微任务则将其添加到微任务的队列中；")]),t._v(" "),n("li",[t._v("宏任务执行完毕后，微任务的队列中是否存在任务，若存在，则挨个儿出去执行，直到执行完毕；")]),t._v(" "),n("li",[t._v("GUI 渲染；")]),t._v(" "),n("li",[t._v("回到步骤 1，直到宏任务执行完毕；")])]),t._v(" "),n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/10/event-loop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 运行机制详解：再谈 Event Loop"),n("OutboundLink")],1)])])]),t._v(" "),n("h3",{attrs:{id:"_3-宏任务和微任务分别有哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-宏任务和微任务分别有哪些"}},[t._v("#")]),t._v(" 3.宏任务和微任务分别有哪些")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("宏任务")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("#")]),t._v(" "),n("th",[t._v("浏览器")]),t._v(" "),n("th",[t._v("node")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("script（整体代码）")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("UI 渲染")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("postMessage")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("I/O")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("MessageChannel")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("setTimeout")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("setInterval")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("setImmediate")]),t._v(" "),n("td",[t._v("否")]),t._v(" "),n("td",[t._v("是")])])])]),t._v(" "),n("p",[t._v("优先级：script（整体代码） > setImmediate > MessageChannel > setTimeout / setInterval")])]),t._v(" "),n("li",[n("p",[t._v("微任务")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("#")]),t._v(" "),n("th",[t._v("浏览器")]),t._v(" "),n("th",[t._v("node")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("process.nextTick")]),t._v(" "),n("td",[t._v("否")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("MutationObserver")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("Promise (.then、.catch 和 .finally)")]),t._v(" "),n("td",[t._v("是")]),t._v(" "),n("td",[t._v("是")])])])]),t._v(" "),n("p",[t._v("优先级：process.nextTick > Promise > MutationObserver")])])]),t._v(" "),n("blockquote",[n("p",[t._v("注意：requestAnimationFrame 既不是宏任务，也不是微任务。推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5caac21de51d452b66462649",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 的宏任务与微任务"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_4-可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法"}},[t._v("#")]),t._v(" 4.可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法")]),t._v(" "),n("blockquote",[n("p",[t._v("掌握上面两个问题的答案")])]),t._v(" "),n("h3",{attrs:{id:"_5-使用-promise-实现串行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用-promise-实现串行"}},[t._v("#")]),t._v(" 5.使用 "),n("code",[t._v("Promise")]),t._v(" 实现串行")]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://segmentfault.com/a/1190000016832285",target:"_blank",rel:"noopener noreferrer"}},[t._v("精读《用 Reduce 实现 Promise 串行执行》"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_6-node-与浏览器-eventloop-的差异"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-node-与浏览器-eventloop-的差异"}},[t._v("#")]),t._v(" 6.Node 与浏览器 "),n("code",[t._v("EventLoop")]),t._v(" 的差异")]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5c337ae06fb9a049bc4cd218",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器与 Node 的事件循环(Event Loop)有何区别?"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_7-如何在保证页面运行流畅的情况下处理海量数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何在保证页面运行流畅的情况下处理海量数据"}},[t._v("#")]),t._v(" 7.如何在保证页面运行流畅的情况下处理海量数据")]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5db684ddf265da4d495c40e5",target:"_blank",rel:"noopener noreferrer"}},[t._v("「前端进阶」高性能渲染十万条数据(虚拟列表)"),n("OutboundLink")],1),t._v("\n推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5d76f469f265da039a28aff7",target:"_blank",rel:"noopener noreferrer"}},[t._v("「前端进阶」高性能渲染十万条数据(时间分片)"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"五、语法和-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、语法和-api"}},[t._v("#")]),t._v(" 五、语法和 "),n("code",[t._v("API")])]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("墙裂")]),t._v("推荐阮一峰大神的"),n("a",{attrs:{href:"http://javascript.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 标准参考教程"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_1-理解-ecmascript-和-javascript-的关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-理解-ecmascript-和-javascript-的关系"}},[t._v("#")]),t._v(" 1.理解 "),n("code",[t._v("ECMAScript")]),t._v(" 和 "),n("code",[t._v("JavaScript")]),t._v(" 的关系")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("ECMAScript")]),t._v("\n由 ECMA-262 制定的标准，用于实现通用的脚本语言。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("JavaScript")]),t._v("\n通用脚本编程语言，它遵循了 ECMAScript 标准")])])]),t._v(" "),n("p",[n("code",[t._v("说人话就是ECMAScript是标准规范，而JavaScript是这套标准的一个实现")])]),t._v(" "),n("h3",{attrs:{id:"_2-熟练运用-es5、es6-提供的语法规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-熟练运用-es5、es6-提供的语法规范"}},[t._v("#")]),t._v(" 2.熟练运用 "),n("code",[t._v("es5、es6")]),t._v(" 提供的语法规范")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://yanhaijing.com/es5",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES5"),n("OutboundLink")],1),t._v("、"),n("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/style",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"_3-熟练掌握-javascript-提供的全局对象（例如-date、math）、全局函数（例如-decodeuri、isnan）、全局属性（例如-infinity、undefined）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-熟练掌握-javascript-提供的全局对象（例如-date、math）、全局函数（例如-decodeuri、isnan）、全局属性（例如-infinity、undefined）"}},[t._v("#")]),t._v(" 3.熟练掌握 "),n("code",[t._v("JavaScript")]),t._v(" 提供的全局对象（例如 "),n("code",[t._v("Date")]),t._v("、"),n("code",[t._v("Math")]),t._v("）、全局函数（例如 "),n("code",[t._v("decodeURI")]),t._v("、"),n("code",[t._v("isNaN")]),t._v("）、全局属性（例如 "),n("code",[t._v("Infinity")]),t._v("、"),n("code",[t._v("undefined")]),t._v("）")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("JavaScript")]),t._v("全局对象")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("对象")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_obj_array.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("Array"),n("OutboundLink")],1)]),t._v(" "),n("td",[t._v("用于在单个的变量中存储多个值")])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_obj_boolean.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boolean"),n("OutboundLink")],1)]),t._v(" "),n("td",[t._v("布尔值的包装对象")])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_obj_number.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("Number"),n("OutboundLink")],1)]),t._v(" "),n("td",[t._v("原始数值的包装对象")])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_obj_string.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("String"),n("OutboundLink")],1)]),t._v(" "),n("td",[t._v("字符串的包装对象")])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_obj_date.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("Date"),n("OutboundLink")],1)]),t._v(" "),n("td",[t._v("用于处理日期和时间")])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_obj_math.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("Math"),n("OutboundLink")],1)]),t._v(" "),n("td",[t._v("用于执行数学任务")])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_obj_regexp.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("RegExp"),n("OutboundLink")],1)]),t._v(" "),n("td",[t._v("表示正则表达式，它是对字符串执行模式匹配的强大工具")])])])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("JavaScript")]),t._v("全局函数")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("函数")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("decodeURI()")]),t._v(" "),n("td",[t._v("解码某个编码的 URI")])]),t._v(" "),n("tr",[n("td",[t._v("decodeURIComponent()")]),t._v(" "),n("td",[t._v("解码一个编码的 URI 组件")])]),t._v(" "),n("tr",[n("td",[t._v("encodeURI()")]),t._v(" "),n("td",[t._v("把字符串编码为 URI")])]),t._v(" "),n("tr",[n("td",[t._v("encodeURIComponent()")]),t._v(" "),n("td",[t._v("把字符串编码为 URI 组件")])]),t._v(" "),n("tr",[n("td",[t._v("escape()")]),t._v(" "),n("td",[t._v("在 1.5 版中已弃用。 请改用 encodeURI()或 encodeURIComponent()")])]),t._v(" "),n("tr",[n("td",[t._v("eval()")]),t._v(" "),n("td",[t._v("计算 JavaScript 字符串，并把它作为脚本代码来执行")])]),t._v(" "),n("tr",[n("td",[t._v("getClass()")]),t._v(" "),n("td",[t._v("返回一个 JavaObject 的 JavaClass")])]),t._v(" "),n("tr",[n("td",[t._v("isFinite()")]),t._v(" "),n("td",[t._v("检查某个值是否为有穷大的数")])]),t._v(" "),n("tr",[n("td",[t._v("isNaN()")]),t._v(" "),n("td",[t._v("检查某个值是否是数字")])]),t._v(" "),n("tr",[n("td",[t._v("Number()")]),t._v(" "),n("td",[t._v("把对象的值转换为数字")])]),t._v(" "),n("tr",[n("td",[t._v("parseFloat()")]),t._v(" "),n("td",[t._v("解析一个字符串并返回一个浮点数")])]),t._v(" "),n("tr",[n("td",[t._v("parseInt()")]),t._v(" "),n("td",[t._v("解析一个字符串并返回一个整数")])]),t._v(" "),n("tr",[n("td",[t._v("String()")]),t._v(" "),n("td",[t._v("把对象的值转换为字符串")])]),t._v(" "),n("tr",[n("td",[t._v("unescape()")]),t._v(" "),n("td",[t._v("在 1.5 版中已弃用。 请改用 decodeURI()或 decodeURIComponent()")])])])])]),t._v(" "),n("li",[n("p",[n("code",[t._v("JavaScript")]),t._v("全局属性")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("属性")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Infinity")]),t._v(" "),n("td",[t._v("代表正的无穷大的数值")])]),t._v(" "),n("tr",[n("td",[t._v("java")]),t._v(" "),n("td",[t._v("代表 java.* 包层级的一个 JavaPackage")])]),t._v(" "),n("tr",[n("td",[t._v("NaN")]),t._v(" "),n("td",[t._v("指示某个值是不是数字值")])]),t._v(" "),n("tr",[n("td",[t._v("Packages")]),t._v(" "),n("td",[t._v("根 JavaPackage 对象")])]),t._v(" "),n("tr",[n("td",[t._v("undefined")]),t._v(" "),n("td",[t._v("指示未定义的值")])])])])])]),t._v(" "),n("h3",{attrs:{id:"_4-熟练应用-map、reduce、filter等高阶函数解决问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-熟练应用-map、reduce、filter等高阶函数解决问题"}},[t._v("#")]),t._v(" 4.熟练应用 "),n("code",[t._v("map")]),t._v("、"),n("code",[t._v("reduce")]),t._v("、"),n("code",[t._v("filter")]),t._v("等高阶函数解决问题")]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"http://www.webzsky.com/?p=1347",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("javascript")]),t._v("高阶函数全解"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_5-setinterval-需要注意的点，使用-settimeout-实现-setinterval"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-setinterval-需要注意的点，使用-settimeout-实现-setinterval"}},[t._v("#")]),t._v(" 5."),n("code",[t._v("setInterval")]),t._v(" 需要注意的点，使用 "),n("code",[t._v("settimeout")]),t._v(" 实现 "),n("code",[t._v("setInterval")])]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://www.jeffjade.com/2016/01/10/2016-01-10-javaScript-setInterval/",target:"_blank",rel:"noopener noreferrer"}},[t._v("你所不知道的 setInterval"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_6-javascript-提供的正则表达式-api、可以使用正则表达式（邮箱校验、url-解析、去重等）解决常见问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-javascript-提供的正则表达式-api、可以使用正则表达式（邮箱校验、url-解析、去重等）解决常见问题"}},[t._v("#")]),t._v(" 6."),n("code",[t._v("JavaScript")]),t._v(" 提供的正则表达式 "),n("code",[t._v("API")]),t._v("、可以使用正则表达式（邮箱校验、"),n("code",[t._v("URL")]),t._v(" 解析、去重等）解决常见问题")]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://github.com/artiely/notes/blob/master/book/JavaScript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BF%B7%E4%BD%A0%E4%B9%A6%EF%BC%881.1%E7%89%88%EF%BC%89.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 正则表达式迷你书"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_7-javascript-异常处理的方式，统一的异常处理方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-javascript-异常处理的方式，统一的异常处理方案"}},[t._v("#")]),t._v(" 7."),n("code",[t._v("JavaScript")]),t._v(" 异常处理的方式，统一的异常处理方案")]),t._v(" "),n("blockquote",[n("p",[t._v("推荐阅读"),n("a",{attrs:{href:"https://juejin.im/post/5be2b0f6e51d4523161b92f0",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端错误收集以及统一异常处理"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);